def test_matrix_divided():
    # Test valid input
    matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
    div = 2
    expected_output = [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]
    assert matrix_divided(matrix, div) == expected_output

    # Test invalid matrix input
    matrix = [[1, 2, 3], [4, 5, 'a'], [7, 8, 9]]
    div = 2
    try:
        matrix_divided(matrix, div)
    except TypeError as e:
        assert str(e) == "matrix must be a matrix (list of lists) of integers/floats"

    # Test invalid row size input
    matrix = [[1, 2, 3], [4, 5, 6], [7, 8]]
    div = 2
    try:
        matrix_divided(matrix, div)
    except TypeError as e:
        assert str(e) == "Each row of the matrix must have the same size"

    # Test invalid div input
    matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
    div = 'a'
    try:
        matrix_divided(matrix, div)
    except TypeError as e:
        assert str(e) == "div must be a number"

    # Test div by 0 input
    matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
    div = 0
    try:
        matrix_divided(matrix, div)
    except ZeroDivisionError as e:
        assert str(e) == "division by zero"
